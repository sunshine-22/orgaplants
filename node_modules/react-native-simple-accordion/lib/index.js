"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SimpleAccordion = void 0;
const React = __importStar(require("react"));
const react_native_1 = require("react-native");
const react_native_collapsible_1 = __importDefault(require("react-native-collapsible"));
const downArrow = require("./assets/ic-expand-more.png");
const upArrow = require("./assets/ic-expand-less.png");
const SimpleAccordion = ({ title = "", viewInside, startCollapsed = true, showContentInsideOfCard = true, showArrows = true, arrowColor = "#000000", viewContainerStyle = {}, bannerStyle = {}, titleStyle = {} }) => {
    const [isCollapsed, setIsCollapsed] = React.useState(startCollapsed);
    return (<react_native_1.View>
            <react_native_1.TouchableOpacity style={[
            styles.defaultBannerStyle,
            bannerStyle
        ]} onPress={() => setIsCollapsed(!isCollapsed)}>
                <react_native_1.View style={[styles.titleContainer]}>
                    <react_native_1.Text allowFontScaling={false} style={[styles.defaultTitleStyle, titleStyle]}>{title}</react_native_1.Text>
                </react_native_1.View>
                {showArrows &&
            <react_native_1.Image source={isCollapsed ? downArrow : upArrow} style={[styles.arrows, { tintColor: arrowColor }]}/>}
            </react_native_1.TouchableOpacity>
            <react_native_collapsible_1.default collapsed={isCollapsed} style={[styles.collapsible]}>
                <react_native_1.View style={[
            styles.defaultViewContainer,
            showContentInsideOfCard ? styles.card : styles.nothing,
            viewContainerStyle
        ]}>
                    {viewInside}
                </react_native_1.View>
            </react_native_collapsible_1.default>
        </react_native_1.View>);
};
exports.SimpleAccordion = SimpleAccordion;
const styles = react_native_1.StyleSheet.create({
    nothing: {},
    arrows: {
        height: 32,
        width: 32,
        resizeMode: "contain"
    },
    defaultBannerStyle: {
        height: 60,
        flexDirection: "row",
        backgroundColor: "#E9E9E9",
        padding: 16,
        alignItems: "center"
    },
    defaultTitleStyle: {
        fontSize: 16,
        fontWeight: "bold",
        color: "#000000"
    },
    defaultViewContainer: {
        padding: 8,
        backgroundColor: '#FFFFFF'
    },
    card: {
        borderBottomLeftRadius: 10,
        borderBottomRightRadius: 10,
        shadowColor: '#000000',
        shadowOffset: {
            width: 0,
            height: 2
        },
        shadowOpacity: 0.5,
        shadowRadius: 3.84,
        elevation: 5
    },
    titleContainer: {
        flex: 1
    },
    collapsible: {
        paddingBottom: 8
    }
});
//# sourceMappingURL=index.js.map