{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"show\", \"pickerButtonOnPress\", \"inputPlaceholder\", \"searchMessage\", \"lang\", \"style\", \"enableModalAvoiding\", \"androidWindowSoftInputMode\", \"onBackdropPress\", \"disableBackdrop\", \"excludedCountries\", \"initialState\", \"onRequestClose\", \"itemTemplate\"],\n  _excluded2 = [\"lang\", \"searchValue\", \"excludedCountries\", \"style\", \"pickerButtonOnPress\", \"itemTemplate\"];\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Easing from \"react-native-web/dist/exports/Easing\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport { useKeyboardStatus } from \"./helpers/useKeyboardStatus\";\nimport { CountryButton } from \"./components/CountryButton\";\nimport { countriesRemover } from \"./helpers/countriesRemover\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar height = Dimensions.get('window').height;\n\nexport var CountryPicker = function CountryPicker(_ref) {\n  var show = _ref.show,\n    pickerButtonOnPress = _ref.pickerButtonOnPress,\n    inputPlaceholder = _ref.inputPlaceholder,\n    searchMessage = _ref.searchMessage,\n    _ref$lang = _ref.lang,\n    lang = _ref$lang === void 0 ? 'en' : _ref$lang,\n    style = _ref.style,\n    enableModalAvoiding = _ref.enableModalAvoiding,\n    androidWindowSoftInputMode = _ref.androidWindowSoftInputMode,\n    onBackdropPress = _ref.onBackdropPress,\n    disableBackdrop = _ref.disableBackdrop,\n    excludedCountries = _ref.excludedCountries,\n    initialState = _ref.initialState,\n    onRequestClose = _ref.onRequestClose,\n    _ref$itemTemplate = _ref.itemTemplate,\n    ItemTemplate = _ref$itemTemplate === void 0 ? CountryButton : _ref$itemTemplate,\n    rest = _objectWithoutProperties(_ref, _excluded);\n  var codes = countriesRemover(excludedCountries);\n  var keyboardStatus = useKeyboardStatus();\n  var animationDriver = React.useRef(new Animated.Value(0)).current;\n  var animatedMargin = React.useRef(new Animated.Value(0)).current;\n  var _React$useState = React.useState(initialState || ''),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    searchValue = _React$useState2[0],\n    setSearchValue = _React$useState2[1];\n  var _React$useState3 = React.useState(false),\n    _React$useState4 = _slicedToArray(_React$useState3, 2),\n    showModal = _React$useState4[0],\n    setShowModal = _React$useState4[1];\n  React.useEffect(function () {\n    if (show) {\n      setShowModal(true);\n    } else {\n      closeModal();\n    }\n  }, [show]);\n  React.useEffect(function () {\n    if (enableModalAvoiding && (keyboardStatus.keyboardPlatform === 'ios' || keyboardStatus.keyboardPlatform === 'android' && androidWindowSoftInputMode === 'pan')) {\n      if (keyboardStatus.isOpen) Animated.timing(animatedMargin, {\n        toValue: keyboardStatus.keyboardHeight,\n        duration: 190,\n        easing: Easing.ease,\n        useNativeDriver: false\n      }).start();\n      if (!keyboardStatus.isOpen) Animated.timing(animatedMargin, {\n        toValue: 0,\n        duration: 190,\n        easing: Easing.ease,\n        useNativeDriver: false\n      }).start();\n    }\n  }, [keyboardStatus.isOpen]);\n  var resultCountries = React.useMemo(function () {\n    var lowerSearchValue = searchValue.toLowerCase();\n    return codes.filter(function (country) {\n      if (country != null && country.dial_code.includes(searchValue) || country != null && country.name[lang || 'en'].toLowerCase().normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\").includes(lowerSearchValue)) {\n        return country;\n      }\n    });\n  }, [searchValue]);\n  var modalPosition = animationDriver.interpolate({\n    inputRange: [0, 0.5, 0.6, 0.7, 0.8, 0.9, 0.95, 1],\n    outputRange: [height, 105, 75, 50, 30, 15, 5, 0],\n    extrapolate: 'clamp'\n  });\n  var modalBackdropFade = animationDriver.interpolate({\n    inputRange: [0, 0.5, 1],\n    outputRange: [0, 0.5, 1],\n    extrapolate: 'clamp'\n  });\n  var openModal = function openModal() {\n    Animated.timing(animationDriver, {\n      toValue: 1,\n      duration: 400,\n      useNativeDriver: false\n    }).start();\n  };\n  var closeModal = function closeModal() {\n    Animated.timing(animationDriver, {\n      toValue: 0,\n      duration: 400,\n      useNativeDriver: false\n    }).start(function () {\n      return setShowModal(false);\n    });\n  };\n  var renderItem = function renderItem(_ref2) {\n    var item = _ref2.item,\n      index = _ref2.index;\n    var itemName = item == null ? void 0 : item.name[lang];\n    var checkName = itemName.length ? itemName : item == null ? void 0 : item.name['en'];\n    return _jsx(ItemTemplate, {\n      item: item,\n      style: style,\n      name: checkName,\n      onPress: function onPress() {\n        Keyboard.dismiss();\n        typeof pickerButtonOnPress === 'function' && pickerButtonOnPress(item);\n      }\n    }, index);\n  };\n  var onStartShouldSetResponder = function onStartShouldSetResponder() {\n    onBackdropPress == null ? void 0 : onBackdropPress();\n    return false;\n  };\n  return _jsx(Modal, {\n    animationType: \"fade\",\n    transparent: true,\n    visible: showModal,\n    onShow: openModal,\n    onRequestClose: onRequestClose,\n    children: _jsxs(View, {\n      style: {\n        flex: 1,\n        justifyContent: 'flex-end'\n      },\n      children: [!disableBackdrop && _jsx(Animated.View, {\n        onStartShouldSetResponder: onStartShouldSetResponder,\n        style: [{\n          flex: 1,\n          opacity: modalBackdropFade,\n          backgroundColor: 'rgba(0,0,0,0.45)',\n          position: 'absolute',\n          width: '100%',\n          height: '100%',\n          justifyContent: 'flex-end'\n        }, style == null ? void 0 : style.backdrop]\n      }), _jsxs(Animated.View, {\n        style: [styles.modal, style == null ? void 0 : style.modal, {\n          transform: [{\n            translateY: modalPosition\n          }]\n        }],\n        children: [_jsx(View, {\n          style: {\n            flexDirection: 'row',\n            alignItems: 'center'\n          },\n          children: _jsx(TextInput, _objectSpread({\n            style: [styles.searchBar, style == null ? void 0 : style.textInput],\n            value: searchValue,\n            onChangeText: setSearchValue,\n            placeholder: inputPlaceholder || 'Search your country'\n          }, rest))\n        }), _jsx(View, {\n          style: [styles.line, style == null ? void 0 : style.line]\n        }), resultCountries.length === 0 ? _jsx(View, {\n          style: [styles.countryMessage, style == null ? void 0 : style.countryMessageContainer],\n          children: _jsx(Text, {\n            style: [{\n              color: '#8c8c8c',\n              fontSize: 16\n            }, style == null ? void 0 : style.searchMessageText],\n            children: searchMessage || 'Sorry we cant find your country :('\n          })\n        }) : _jsx(FlatList, _objectSpread({\n          showsVerticalScrollIndicator: false,\n          data: resultCountries || codes,\n          keyExtractor: function keyExtractor(item, index) {\n            return '' + item + index;\n          },\n          initialNumToRender: 10,\n          maxToRenderPerBatch: 10,\n          style: [{\n            height: 250\n          }, style == null ? void 0 : style.itemsList],\n          keyboardShouldPersistTaps: 'handled',\n          renderItem: renderItem\n        }, rest)), _jsx(Animated.View, {\n          style: [styles.modalInner, style == null ? void 0 : style.modalInner, {\n            height: animatedMargin\n          }]\n        })]\n      })]\n    })\n  });\n};\nexport var CountryList = function CountryList(_ref3) {\n  var _ref3$lang = _ref3.lang,\n    lang = _ref3$lang === void 0 ? 'en' : _ref3$lang,\n    _ref3$searchValue = _ref3.searchValue,\n    searchValue = _ref3$searchValue === void 0 ? '' : _ref3$searchValue,\n    excludedCountries = _ref3.excludedCountries,\n    style = _ref3.style,\n    pickerButtonOnPress = _ref3.pickerButtonOnPress,\n    _ref3$itemTemplate = _ref3.itemTemplate,\n    ItemTemplate = _ref3$itemTemplate === void 0 ? CountryButton : _ref3$itemTemplate,\n    rest = _objectWithoutProperties(_ref3, _excluded2);\n  var codes = countriesRemover(excludedCountries);\n  var resultCountries = React.useMemo(function () {\n    var lowerSearchValue = searchValue.toLowerCase();\n    return codes.filter(function (country) {\n      if (country != null && country.dial_code.includes(searchValue) || country != null && country.name[lang || 'en'].toLowerCase().normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\").includes(lowerSearchValue)) {\n        return country;\n      }\n    });\n  }, [searchValue]);\n  var renderItem = function renderItem(_ref4) {\n    var item = _ref4.item,\n      index = _ref4.index;\n    var itemName = item == null ? void 0 : item.name[lang];\n    var checkName = itemName.length ? itemName : item == null ? void 0 : item.name['en'];\n    return _jsx(ItemTemplate, {\n      item: item,\n      style: style,\n      name: checkName,\n      onPress: function onPress() {\n        Keyboard.dismiss();\n        typeof pickerButtonOnPress === 'function' && pickerButtonOnPress(item);\n      }\n    }, index);\n  };\n  return _jsx(FlatList, _objectSpread({\n    showsVerticalScrollIndicator: false,\n    data: resultCountries || codes,\n    keyExtractor: function keyExtractor(item, index) {\n      return '' + item + index;\n    },\n    initialNumToRender: 10,\n    maxToRenderPerBatch: 10,\n    style: [{\n      width: '100%'\n    }, style == null ? void 0 : style.itemsList],\n    keyboardShouldPersistTaps: 'handled',\n    renderItem: renderItem\n  }, rest));\n};\nvar styles = {\n  container: {\n    flex: 1,\n    position: 'absolute',\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    justifyContent: 'flex-end'\n  },\n  modal: {\n    backgroundColor: 'white',\n    width: '100%',\n    maxWidth: Platform.OS === \"web\" ? 600 : undefined,\n    borderTopRightRadius: 15,\n    borderTopLeftRadius: 15,\n    padding: 10,\n    shadowColor: '#000',\n    shadowOffset: {\n      width: 0,\n      height: 6\n    },\n    bottom: 0,\n    zIndex: 10,\n    shadowOpacity: 0.37,\n    shadowRadius: 7.49,\n    elevation: 10\n  },\n  modalInner: {\n    backgroundColor: 'white',\n    width: '100%'\n  },\n  searchBar: {\n    flex: 1,\n    backgroundColor: '#f5f5f5',\n    borderRadius: 10,\n    height: 40,\n    padding: 5\n  },\n  countryMessage: {\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: 250\n  },\n  line: {\n    width: '100%',\n    height: 1.5,\n    borderRadius: 2,\n    backgroundColor: '#eceff1',\n    alignSelf: 'center',\n    marginVertical: 5\n  }\n};","map":{"version":3,"names":["React","useKeyboardStatus","CountryButton","countriesRemover","height","Dimensions","get","CountryPicker","show","pickerButtonOnPress","inputPlaceholder","searchMessage","lang","style","enableModalAvoiding","androidWindowSoftInputMode","onBackdropPress","disableBackdrop","excludedCountries","initialState","onRequestClose","itemTemplate","ItemTemplate","rest","codes","keyboardStatus","animationDriver","useRef","Animated","Value","current","animatedMargin","useState","searchValue","setSearchValue","showModal","setShowModal","useEffect","closeModal","keyboardPlatform","isOpen","timing","toValue","keyboardHeight","duration","easing","Easing","ease","useNativeDriver","start","resultCountries","useMemo","lowerSearchValue","toLowerCase","filter","country","dial_code","includes","name","normalize","replace","modalPosition","interpolate","inputRange","outputRange","extrapolate","modalBackdropFade","openModal","renderItem","item","index","itemName","checkName","length","Keyboard","dismiss","onStartShouldSetResponder","flex","justifyContent","opacity","backgroundColor","position","width","backdrop","styles","modal","transform","translateY","flexDirection","alignItems","searchBar","textInput","line","countryMessage","countryMessageContainer","color","fontSize","searchMessageText","itemsList","modalInner","CountryList","container","left","right","top","bottom","maxWidth","Platform","OS","undefined","borderTopRightRadius","borderTopLeftRadius","padding","shadowColor","shadowOffset","zIndex","shadowOpacity","shadowRadius","elevation","borderRadius","alignSelf","marginVertical"],"sources":["C:/ORGAPLANTS/Scripts/orgaplants/node_modules/react-native-country-codes-picker/index.tsx"],"sourcesContent":["import React from 'react';\r\nimport {\r\n    FlatList,\r\n    TextInput,\r\n    View,\r\n    Text,\r\n    Animated,\r\n    Dimensions,\r\n    Easing,\r\n    Platform,\r\n    Keyboard,\r\n    ViewStyle, Modal\r\n} from 'react-native';\r\nimport {CountryItem, ItemTemplateProps, Style} from \"./types/Types\";\r\nimport {useKeyboardStatus} from \"./helpers/useKeyboardStatus\";\r\nimport {CountryButton} from \"./components/CountryButton\";\r\nimport {countriesRemover} from \"./helpers/countriesRemover\";\r\n\r\n\r\nconst height = Dimensions.get('window').height;\r\n\r\n/**\r\n * Country picker component\r\n * @param {?boolean} show Hide or show component by using this props\r\n * @param {?boolean} disableBackdrop Hide or show component by using this props\r\n * @param {?boolean} enableModalAvoiding Is modal should avoid keyboard ? On android to work required to use with androidWindowSoftInputMode with value pan, by default android will avoid keyboard by itself\r\n * @param {?string} androidWindowSoftInputMode Hide or show component by using this props\r\n * @param {?string} inputPlaceholder Text to showing in input\r\n * @param {?string} searchMessage Text to show user when no country to show\r\n * @param {?string} lang Current selected lang by user\r\n * @param {?string} initialState Here you should define initial dial code\r\n * @param {?array} excludedCountries Array of countries which should be excluded from picker\r\n * @param {Function} pickerButtonOnPress Function to receive selected country\r\n * @param {Function} onBackdropPress Function to receive selected country\r\n * @param {Function} onRequestClose Function to receive selected country\r\n * @param {?Object} style Styles\r\n * @param {?React.ReactNode} itemTemplate Country list template\r\n * @param rest\r\n */\r\n\r\ninterface Props {\r\n    excludedCountries?: string[],\r\n\r\n    style?: Style,\r\n\r\n    show: boolean,\r\n    enableModalAvoiding?: boolean,\r\n    disableBackdrop?: boolean,\r\n\r\n    onBackdropPress?: (...args: any) => any,\r\n    pickerButtonOnPress: (item: CountryItem) => any,\r\n    itemTemplate?: (props: ItemTemplateProps) => JSX.Element,\r\n    onRequestClose?: (...args: any) => any,\r\n\r\n    lang: string,\r\n    inputPlaceholder?: string,\r\n    searchMessage?: string,\r\n    androidWindowSoftInputMode?: string,\r\n    initialState?: string,\r\n}\r\n\r\nexport const CountryPicker = ({\r\n                                  show,\r\n                                  pickerButtonOnPress,\r\n                                  inputPlaceholder,\r\n                                  searchMessage,\r\n                                  lang = 'en',\r\n                                  style,\r\n                                  enableModalAvoiding,\r\n                                  androidWindowSoftInputMode,\r\n                                  onBackdropPress,\r\n                                  disableBackdrop,\r\n                                  excludedCountries,\r\n                                  initialState,\r\n                                  onRequestClose,\r\n                                  itemTemplate: ItemTemplate = CountryButton,\r\n                                  ...rest\r\n                              }: Props) => {\r\n    const codes = countriesRemover(excludedCountries);\r\n    const keyboardStatus = useKeyboardStatus();\r\n    const animationDriver = React.useRef(new Animated.Value(0)).current;\r\n    const animatedMargin = React.useRef(new Animated.Value(0)).current;\r\n    const [searchValue, setSearchValue] = React.useState<string>(initialState || '');\r\n    const [showModal, setShowModal] = React.useState<boolean>(false);\r\n\r\n    React.useEffect(() => {\r\n        if (show) {\r\n            setShowModal(true);\r\n        } else {\r\n            closeModal();\r\n        }\r\n    }, [show]);\r\n\r\n    React.useEffect(() => {\r\n        if (\r\n            enableModalAvoiding &&\r\n            (\r\n                keyboardStatus.keyboardPlatform === 'ios' ||\r\n                (keyboardStatus.keyboardPlatform === 'android' &&\r\n                    androidWindowSoftInputMode === 'pan')\r\n            )\r\n        ) {\r\n            if (keyboardStatus.isOpen)\r\n                Animated.timing(animatedMargin, {\r\n                    toValue: keyboardStatus.keyboardHeight,\r\n                    duration: 190,\r\n                    easing: Easing.ease,\r\n                    useNativeDriver: false,\r\n                }).start();\r\n\r\n            if (!keyboardStatus.isOpen)\r\n                Animated.timing(animatedMargin, {\r\n                    toValue: 0,\r\n                    duration: 190,\r\n                    easing: Easing.ease,\r\n                    useNativeDriver: false,\r\n                }).start();\r\n        }\r\n    }, [keyboardStatus.isOpen]);\r\n\r\n    const resultCountries = React.useMemo(() => {\r\n        const lowerSearchValue = searchValue.toLowerCase();\r\n\r\n        return codes.filter((country) => {\r\n            if (country?.dial_code.includes(searchValue) || country?.name[lang || 'en'].toLowerCase().normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\").includes(lowerSearchValue)) {\r\n                return country;\r\n            }\r\n        });\r\n    }, [searchValue]);\r\n\r\n    const modalPosition = animationDriver.interpolate({\r\n        inputRange: [0, 0.5, 0.6, 0.7, 0.8, 0.9, 0.95, 1],\r\n        outputRange: [height, 105, 75, 50, 30, 15, 5, 0],\r\n        extrapolate: 'clamp',\r\n    });\r\n\r\n    const modalBackdropFade = animationDriver.interpolate({\r\n        inputRange: [0, 0.5, 1],\r\n        outputRange: [0, 0.5, 1],\r\n        extrapolate: 'clamp'\r\n    });\r\n\r\n    const openModal = () => {\r\n        Animated.timing(animationDriver, {\r\n            toValue: 1,\r\n            duration: 400,\r\n            useNativeDriver: false,\r\n        }).start();\r\n    };\r\n\r\n    const closeModal = () => {\r\n        Animated.timing(animationDriver, {\r\n            toValue: 0,\r\n            duration: 400,\r\n            useNativeDriver: false,\r\n        }).start(() => setShowModal(false));\r\n    };\r\n\r\n    const renderItem = ({item, index}: { item: CountryItem, index: number }) => {\r\n        let itemName = item?.name[lang];\r\n        let checkName = itemName.length ? itemName : item?.name['en'];\r\n\r\n        return (\r\n            <ItemTemplate\r\n                key={index}\r\n                item={item}\r\n                style={style}\r\n                name={checkName}\r\n                onPress={() => {\r\n                    Keyboard.dismiss();\r\n                    typeof pickerButtonOnPress === 'function' && pickerButtonOnPress(item);\r\n                }}\r\n            />\r\n        );\r\n    };\r\n\r\n    const onStartShouldSetResponder = () => {\r\n        onBackdropPress?.();\r\n        return false;\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            animationType=\"fade\"\r\n            transparent={true}\r\n            visible={showModal}\r\n            onShow={openModal}\r\n            onRequestClose={onRequestClose}\r\n        >\r\n            <View\r\n                style={{\r\n                    flex: 1,\r\n                    justifyContent: 'flex-end'\r\n                }}\r\n            >\r\n                {!disableBackdrop && (\r\n                    <Animated.View\r\n                        onStartShouldSetResponder={onStartShouldSetResponder}\r\n                        style={[\r\n                            {\r\n                                flex: 1,\r\n                                opacity: modalBackdropFade,\r\n                                backgroundColor: 'rgba(0,0,0,0.45)',\r\n                                position: 'absolute',\r\n                                width: '100%',\r\n                                height: '100%',\r\n                                justifyContent: 'flex-end'\r\n                            },\r\n                            style?.backdrop\r\n                        ]}\r\n                    />\r\n                )}\r\n                <Animated.View\r\n                    style={[\r\n                        styles.modal,\r\n                        style?.modal,\r\n                        {\r\n                            transform: [\r\n                                {\r\n                                    translateY: modalPosition,\r\n                                },\r\n                            ],\r\n                        },\r\n                    ]}\r\n                >\r\n                    <View\r\n                        style={{\r\n                            flexDirection: 'row',\r\n                            alignItems: 'center',\r\n                        }}\r\n                    >\r\n                        <TextInput\r\n                            style={[styles.searchBar, style?.textInput]}\r\n                            value={searchValue}\r\n                            onChangeText={setSearchValue}\r\n                            placeholder={inputPlaceholder || 'Search your country'}\r\n                            {...rest}\r\n                        />\r\n                    </View>\r\n                    <View style={[styles.line, style?.line]}/>\r\n                    {resultCountries.length === 0 ? (\r\n                        <View style={[styles.countryMessage, style?.countryMessageContainer]}>\r\n                            <Text\r\n                                style={[\r\n                                    {\r\n                                        color: '#8c8c8c',\r\n                                        fontSize: 16,\r\n                                    },\r\n                                    style?.searchMessageText,\r\n                                ]}\r\n                            >\r\n                                {searchMessage || 'Sorry we cant find your country :('}\r\n                            </Text>\r\n                        </View>\r\n                    ) : (\r\n                        <FlatList\r\n                            showsVerticalScrollIndicator={false}\r\n                            data={(resultCountries || codes)}\r\n                            keyExtractor={(item, index) => '' + item + index}\r\n                            initialNumToRender={10}\r\n                            maxToRenderPerBatch={10}\r\n                            style={[{\r\n                                height: 250\r\n                            }, style?.itemsList]}\r\n                            keyboardShouldPersistTaps={'handled'}\r\n                            renderItem={renderItem}\r\n                            {...rest}\r\n                        />\r\n                    )}\r\n                    <Animated.View\r\n                        style={[\r\n                            styles.modalInner,\r\n                            style?.modalInner,\r\n                            {\r\n                                height: animatedMargin,\r\n                            },\r\n                        ]}\r\n                    />\r\n                </Animated.View>\r\n            </View>\r\n        </Modal>\r\n    )\r\n};\r\n\r\ninterface CountryListProps {\r\n    lang: string,\r\n    searchValue?: string,\r\n    excludedCountries?: string[],\r\n\r\n    itemTemplate?: (props: ItemTemplateProps) => JSX.Element,\r\n    pickerButtonOnPress: (item: CountryItem) => any,\r\n\r\n    style?: Style,\r\n}\r\n\r\nexport const CountryList = ({\r\n                                lang = 'en',\r\n                                searchValue = '',\r\n                                excludedCountries,\r\n                                style,\r\n                                pickerButtonOnPress,\r\n                                itemTemplate: ItemTemplate = CountryButton,\r\n                                ...rest\r\n                            }: CountryListProps) => {\r\n    const codes = countriesRemover(excludedCountries);\r\n\r\n    const resultCountries = React.useMemo(() => {\r\n        const lowerSearchValue = searchValue.toLowerCase();\r\n\r\n        return codes.filter((country) => {\r\n            if (country?.dial_code.includes(searchValue) || country?.name[lang || 'en'].toLowerCase().normalize(\"NFD\").replace(/[\\u0300-\\u036f]/g, \"\").includes(lowerSearchValue)) {\r\n                return country;\r\n            }\r\n        });\r\n    }, [searchValue]);\r\n\r\n    const renderItem = ({item, index}: { item: CountryItem, index: number }) => {\r\n        let itemName = item?.name[lang];\r\n        let checkName = itemName.length ? itemName : item?.name['en'];\r\n\r\n        return (\r\n            <ItemTemplate\r\n                key={index}\r\n                item={item}\r\n                style={style}\r\n                name={checkName}\r\n                onPress={() => {\r\n                    Keyboard.dismiss();\r\n                    typeof pickerButtonOnPress === 'function' && pickerButtonOnPress(item);\r\n                }}\r\n            />\r\n        );\r\n    };\r\n\r\n    return (\r\n        <FlatList\r\n            showsVerticalScrollIndicator={false}\r\n            data={(resultCountries || codes)}\r\n            keyExtractor={(item, index) => '' + item + index}\r\n            initialNumToRender={10}\r\n            maxToRenderPerBatch={10}\r\n            style={[{width: '100%'}, style?.itemsList]}\r\n            keyboardShouldPersistTaps={'handled'}\r\n            renderItem={renderItem}\r\n            {...rest}\r\n        />\r\n    )\r\n};\r\n\r\n\r\ntype StyleKeys = 'container' | 'modal' | 'modalInner' | 'searchBar' | 'countryMessage' | 'line';\r\n\r\nconst styles: { [key in StyleKeys]: ViewStyle } = {\r\n    container: {\r\n        flex: 1,\r\n        position: 'absolute',\r\n        left: 0,\r\n        right: 0,\r\n        top: 0,\r\n        bottom: 0,\r\n        justifyContent: 'flex-end',\r\n    },\r\n    modal: {\r\n        backgroundColor: 'white',\r\n        width: '100%',\r\n        maxWidth: Platform.OS === \"web\" ? 600 : undefined,\r\n        borderTopRightRadius: 15,\r\n        borderTopLeftRadius: 15,\r\n        padding: 10,\r\n        shadowColor: '#000',\r\n        shadowOffset: {\r\n            width: 0,\r\n            height: 6,\r\n        },\r\n        bottom: 0,\r\n        zIndex: 10,\r\n        shadowOpacity: 0.37,\r\n        shadowRadius: 7.49,\r\n\r\n        elevation: 10,\r\n    },\r\n    modalInner: {\r\n        backgroundColor: 'white',\r\n        width: '100%',\r\n    },\r\n    searchBar: {\r\n        flex: 1,\r\n        backgroundColor: '#f5f5f5',\r\n        borderRadius: 10,\r\n        height: 40,\r\n        padding: 5,\r\n    },\r\n    countryMessage: {\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        height: 250,\r\n    },\r\n    line: {\r\n        width: '100%',\r\n        height: 1.5,\r\n        borderRadius: 2,\r\n        backgroundColor: '#eceff1',\r\n        alignSelf: 'center',\r\n        marginVertical: 5,\r\n    },\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}